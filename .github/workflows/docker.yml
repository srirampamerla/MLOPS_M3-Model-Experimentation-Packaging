name: CI/CD for Dockerized Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Set up Python (for dependencies installation)
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.8"

    # Step 3: Install Python dependencies
    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Step 4: Build Docker image
    - name: Build Docker Image
      run: |
        docker build -t flask-app .

    # Step 5: Run pipeline script to download data, run grid search, save model, and start Flask app
    - name: Run Pipeline Script
      run: |
        python scripts/run_pipeline.py

    # Step 6: Run Docker container
    - name: Run Docker Container
      run: |
        docker run -d -p 5000:5000 --name flask-container flask-app

    # Step 7: Test Flask API (testing running inside GitHub Actions)
    - name: Test Flask API
      run: |
        sleep 10  # Allow container to initialize
        curl --fail http://localhost:5000/predict -X POST -H "Content-Type: application/json" \
          -d '{"feature1": 5.1, "feature2": 3.5, "feature3": 1.4, "feature4": 0.2}'

    # Step 8: Clean up Docker container
    - name: Clean up Docker Container
      run: |
        docker stop flask-container
        docker rm flask-container
