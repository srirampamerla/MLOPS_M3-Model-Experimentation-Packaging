name: CI/CD for Dockerized Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Set up Python (for dependencies installation)
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.8"

    # Step 3: Install Python dependencies
    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Step 4: Run GridSearch Script Directly
    - name: Run GridSearch Script
      run: |
        python scripts/gridsearch.py
    
    # Step 5: Build Docker image
    - name: Build Docker Image
      run: |
        docker build -t flask-app .

    #

    # Step 6: Run Docker container
    - name: Run Docker Container
      run: |
        docker run -d -p 5000:5000 --name flask-container flask-app

    # Step 7: Check Docker container logs for errors
    - name: Check Docker Container Logs
      run: |
        docker logs flask-container

<<<<<<< HEAD
    # # Step 7: Wait for Flask app to initialize (increase the wait time)
    # - name: Wait for Flask App to Initialize
    #   run: |
    #     sleep 50  # Increased wait time to allow Flask app to fully initialize
=======
    # Step 7: Wait for Flask app to initialize (increase the wait time)
    - name: Wait for Flask App to Initialize
      run: |
        sleep 30  # Increased wait time to allow Flask app to fully initialize
>>>>>>> 4b1670671b906d0620cfffc0d5f13c487e987794

    # # Step 8: Test Flask API (testing running inside GitHub Actions)
    # - name: Test Flask API
    #   run: |
    #     curl --fail http://localhost:5000/predict -X POST -H "Content-Type: application/json" \
    #       -d '{"feature1": 5.1, "feature2": 3.5, "feature3": 1.4, "feature4": 0.2}'

    # Step 9: Clean up Docker container
    - name: Clean up Docker Container
      run: |
        docker stop flask-container
        docker rm flask-container
